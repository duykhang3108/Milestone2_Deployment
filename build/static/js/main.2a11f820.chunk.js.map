{"version":3,"sources":["images/pic1.jpg","pages/Register.jsx","pages/Appointment.jsx","pages/Calendar.jsx","pages/OneAp.jsx","pages/ApList.jsx","pages/EditAppointment.jsx","pages/Profile.jsx","history.js","pages/Contact.js","pages/Login.jsx","pages/Home.jsx","pages/ContactForm.jsx","pages/LoginChange.jsx","Header.jsx","pages/RegisterChange.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","React","Component","Appointment","props","onChangeDate","meetingdate","setState","state","title","guest_name","meetingtime","meeting_user","note","status","building","floor","room","location","teachers","locations","this","event","target","value","obj","name","fetch","then","response","json","data","input","method","headers","body","JSON","stringify","resetState","refreshProfile","alert","fetchTeachers","fetchLocations","className","type","placeholder","onChange","handleChangeTitle","bind","handleChangeMeetinUser","map","e","handleChangeMeetingLocation","handleChangeNote","onClick","fetchAppointmentCreate","Calendar","listOfAppoinments","list","events","filter","a","userName","forEach","date","push","fetchData","initialView","plugins","dayGridPlugin","OneAp","class","src","avatar","style","width","height","time","to","appointmentId","color","deleteFunction","ApList","aps","window","confirm","console","log","paddingTop","id","textDecoration","myPut","EditAppointment","oneApp","params","match","displayInfo","Date","fetchAppointment","htmlFor","handleChange","selected","handleUpdate","myGet","Profile","user","account","email","lastName","firstName","password","npassword","cnpassword","undefined","res","Url","fectchAccount","key","alt","handleUpdateAvatar","exact","path","render","displayProfile","refresh","disabled","visible","handleChangePassword","history","createBrowserHistory","Contact","ContactForm","message","form","resetPage","for","required","aria-describedby","rows","createData","position","LoginChange","submitted","myuser","listOfUsers","handleSubmit","find","preventDefault","reDirecting","backgroundColor","href","icon","marginTop","getInfo","RegisterChange","registered","border","paddingLeft","frameBorder","allowFullScreen","aria-hidden","tabIndex","titleClass","label","group","validate","error","success","handleAdd","refreshPage","App","component","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2a11f820.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pic1.7797c2aa.jpg\";","import React from 'react'\r\nimport {\r\n    //MDBContainer,\r\n    MDBBtn,\r\n    //MDBModal,\r\n    MDBModalBody,\r\n    MDBModalHeader,\r\n    MDBModalFooter,\r\n    MDBInput,\r\n} from 'mdbreact';\r\nimport { Link, Redirect } from 'react-router-dom'\r\n//import Profile from './Profile'\r\n\r\nconst myPost = 'https://5cb2d49e6ce9ce00145bef17.mockapi.io/api/v1/users'\r\nexport default class Register extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userName: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            password: '',\r\n            registered: false\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        let obj = []\r\n        obj[event.target.name] = event.target.value\r\n        this.setState(obj)\r\n    }\r\n\r\n    handleAdd() {\r\n        if (this.state.name === '' |\r\n            this.state.email === '' |\r\n            this.state.password === '' |\r\n            this.state.firstName === '' |\r\n            this.state.lastName === ''\r\n        ) {\r\n            alert('Something is missing')\r\n        } else {\r\n            let account = {\r\n                userName: this.state.userName,\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            }\r\n            console.log(account)\r\n            fetch(myPost, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'post',\r\n                body: JSON.stringify(account)\r\n            })\r\n                .then(json => {\r\n                    alert('You have signed up successfully!')\r\n                    this.setState({ registered: true })\r\n                })\r\n        }\r\n    }\r\n    refreshPage() {\r\n        if (this.state.registered) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class='container rounded' style={{ height: '650px', width: '800px', border: '2px solid grey' }}>\r\n                    <MDBModalHeader\r\n                        className='text-center'\r\n                        titleClass='w-100 font-weight-bold'\r\n                    >\r\n                        Sign up\r\n                    </MDBModalHeader>\r\n                    <MDBModalBody>\r\n                        <form className='mx-3 grey-text'>\r\n                            <MDBInput\r\n                                label='Username'\r\n                                icon='envelope'\r\n                                group\r\n                                name='userName'\r\n                                type='text'\r\n                                value={this.state.userName}\r\n                                validate\r\n                                error='wrong'\r\n                                success='right'\r\n                                onChange={this.handleChange.bind(this)}\r\n                            />\r\n                            <MDBInput\r\n                                label='First name'\r\n                                icon='envelope'\r\n                                group\r\n                                name='firstName'\r\n                                type='text'\r\n                                value={this.state.firstName}\r\n                                validate\r\n                                error='wrong'\r\n                                success='right'\r\n                                onChange={this.handleChange.bind(this)}\r\n                            />\r\n                            <MDBInput\r\n                                label='Last name'\r\n                                icon='envelope'\r\n                                group\r\n                                name='lastName'\r\n                                type='text'\r\n                                value={this.state.lastName}\r\n                                validate\r\n                                error='wrong'\r\n                                success='right'\r\n                                onChange={this.handleChange.bind(this)}\r\n                            />\r\n                            <MDBInput\r\n                                label='Your email'\r\n                                icon='envelope'\r\n                                group\r\n                                name='email'\r\n                                type='email'\r\n                                value={this.state.email}\r\n                                validate\r\n                                error='wrong'\r\n                                success='right'\r\n                                onChange={this.handleChange.bind(this)}\r\n                            />\r\n                            <MDBInput\r\n                                label='Your password'\r\n                                icon='lock'\r\n                                group\r\n                                name='password'\r\n                                type='password'\r\n                                value={this.state.password}\r\n                                validate\r\n                                onChange={this.handleChange.bind(this)}\r\n                            />\r\n                        </form>\r\n                    </MDBModalBody>\r\n                    <MDBModalFooter className='justify-content-center'>\r\n\r\n                        <MDBBtn type='button' color='deep-orange' onClick={this.handleAdd.bind(this)}>\r\n                            SIGN UP\r\n                                </MDBBtn>\r\n                        {this.refreshPage()}\r\n                        \r\n                            <Link to=\"/\">\r\n                            <MDBBtn type='button' color='deep-green'>Already had an account?\r\n                            </MDBBtn>\r\n                            </Link>\r\n                                \r\n                    </MDBModalFooter>\r\n                </div>\r\n\r\n                <div>\r\n\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n\r\n} ","import React, { Component } from 'react'\r\nimport DateTimePicker from 'react-datetime-picker';\r\nexport default class Appointment extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            guest_name: \"\",\r\n            meetingdate: \"\",\r\n            meetingtime: \"\",\r\n            meeting_user: \"\",\r\n            note: \"\",\r\n            status: \"\",\r\n            building: 1,\r\n            floor: 1,\r\n            room: 1,\r\n            location:\"\",\r\n            teachers: [],\r\n            locations: []\r\n        }\r\n    }\r\n    resetState() {\r\n        this.setState({\r\n            title: \"\",\r\n            guest_name: \"\",\r\n            meetingdate: \"\",\r\n            meetingtime: \"\",\r\n            meeting_user: \"\",\r\n            note: \"\",\r\n            status: \"\",\r\n            building: 1,\r\n            floor: 1,\r\n            room: 1,\r\n            location:\"\"\r\n        })\r\n    }\r\n    handleChangeTitle(event) {\r\n        // let obj = []\r\n        // obj[event.target.name] = event.target.value\r\n        // console.log(this.state.appoinment.guest_name)\r\n        // this.setState(obj)\r\n        this.setState({\r\n            title: event.target.value\r\n        });\r\n    }\r\n    handleChangeGuestName(event) {\r\n        // let obj = []\r\n        // obj[event.target.name] = event.target.value\r\n        // console.log(this.state.appoinment.guest_name)\r\n        // this.setState(obj)\r\n        this.setState({\r\n            guest_name: event.target.value\r\n        });\r\n    }\r\n    handleChangeMeetingDate(event) {\r\n        this.setState({\r\n            meetingdate: event.target.value\r\n        });\r\n    }\r\n    handleChangeMeetingTime(event) {\r\n        this.setState({\r\n            meetingtime: event.target.value\r\n        });\r\n    }\r\n    handleChangeMeetingLocation(event) {\r\n        this.setState({\r\n            location: event.target.value\r\n        });\r\n    }\r\n    handleChangeMeetinUser(event) {\r\n        this.setState({\r\n            meeting_user: event.target.value\r\n        });\r\n    }\r\n    handleChangeNote(event) {\r\n        this.setState({\r\n            note: event.target.value\r\n        });\r\n    }\r\n    handleChange(event) {\r\n        let obj = []\r\n        obj[event.target.name] = event.target.value\r\n        this.setState(obj)\r\n    }\r\n    fetchTeachers() {\r\n        let url = \"https://5f4529863fb92f0016754661.mockapi.io/teachers\"\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({ teachers: data })\r\n            })\r\n    }\r\n    fetchLocations() {\r\n        let url = \"https://5f4529863fb92f0016754661.mockapi.io/locations\"\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({ locations: data })\r\n            })\r\n    }\r\n    fetchAppointmentCreate() {\r\n        \r\n        var input = {\r\n            title: this.state.title,\r\n            guest_name: this.props.guest_name,\r\n            meetingdate: this.state.meetingdate,\r\n            meeting_user: this.state.meeting_user,\r\n            status: \"OnProgress\",\r\n            note: this.state.note,\r\n            location: this.state.location\r\n        }\r\n        var url = \"https://5cb2d49e6ce9ce00145bef17.mockapi.io/api/v1/appointments\"\r\n        const response = fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            //ode: 'cors', // no-cors, *cors, same-origin\r\n            //cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            //credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            //redirect: 'follow', // manual, *follow, error\r\n            //referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n            body: JSON.stringify(input) // body data type must match \"Content-Type\" header\r\n        })\r\n            .then(response => {\r\n                this.resetState();\r\n                this.props.refreshProfile();\r\n                alert(\"You have successfully created an appointment\")\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        this.fetchTeachers()\r\n        this.fetchLocations()\r\n    }\r\n    onChangeDate = meetingdate => this.setState({ meetingdate })\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Appointment Form</h1>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <h3>Title</h3>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter the appointment's title\"\r\n                            name=\"title\"\r\n                            onChange={this.handleChangeTitle.bind(this)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <h3>Meeting Date</h3>\r\n                         <DateTimePicker  value ={this.state.meetingdate}\r\n                        onChange = {this.onChangeDate} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h3>Meeting Person</h3>\r\n                         <select onChange={this.handleChangeMeetinUser.bind(this)}>\r\n                            {this.state.teachers.map(e => {\r\n                                return <option value={e.name}>{e.name}</option>\r\n                            })}\r\n                        </select>\r\n\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h3>Location</h3>\r\n                        <select onChange={this.handleChangeMeetingLocation.bind(this)}>\r\n                            {this.state.locations.map(e => {\r\n                                return <option value={e.location}>{e.location}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h3>Note</h3>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter if there is any prior note\"\r\n                            name=\"note\"\r\n                            onChange={this.handleChangeNote.bind(this)} />\r\n                    </div>\r\n\r\n                </form>\r\n                <button className=\"btn btn-primary\" onClick={this.fetchAppointmentCreate.bind(this)}>Make appointment</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\n\r\nexport default class Calendar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            listOfAppoinments: [],\r\n            list: []\r\n        }\r\n    }\r\n    fetchData() {\r\n        let url = \"https://5cb2d49e6ce9ce00145bef17.mockapi.io/api/v1/appointments\"\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {          \r\n                let events=[]\r\n                data = data.filter(a => a.guest_name == this.props.userName)    \r\n                data.forEach(e => {                   \r\n                    var event = { title: e.title, date: e.meetingdate }                \r\n                   events.push(event)\r\n                })\r\n                this.setState({list:events})\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <FullCalendar\r\n                    initialView=\"dayGridMonth\"\r\n                    plugins={[dayGridPlugin]}\r\n                    events={this.state.list}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { MDBBtnGroup, MDBBtn, MDBModalFooter } from 'mdbreact'\r\nimport { Link } from \"react-router-dom\"\r\nexport default class OneAp extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            //<div >\r\n            <div class=\"card clean-card text-left\"><img class=\"img-thumbnail card-img-top w-100 d-block\"\r\n                src={this.props.avatar} style={{ width: '328px', height: '220px' }} />\r\n                <div class=\"card-body\">\r\n\r\n                    <h5>{this.props.name}</h5>\r\n                    <p>Location: {this.props.location}</p>\r\n                    <p>Time: {this.props.time} </p>\r\n\r\n                    <div>\r\n                        <MDBModalFooter className=\"justify-content-center\">\r\n                            <Link to={\"/Profile/\" + this.props.userName + \"/\" + this.props.appointmentId}>\r\n                                <button type=\"button\" className=\"btn btn-success\"\r\n                                    color=\"deep-orange\">  Edit </button>\r\n                            </Link>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick ={this.props.deleteFunction.bind(this,this.props.appointmentId)}> Delete</button>\r\n                        </MDBModalFooter>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            //</div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport \"../App.css\";\r\nimport OneAd from './OneAp';\r\nimport {  Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default class ApList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.fetchData = this.fetchData.bind(this)\r\n        this.state = {\r\n             aps:[],\r\n    \r\n        }\r\n    }\r\n    fetchData() {\r\n        let url = \"https://5cb2d49e6ce9ce00145bef17.mockapi.io/api/v1/appointments\"\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {          \r\n                let events=[]\r\n                data = data.filter(a => a.guest_name === this.props.userName)    \r\n                \r\n                this.setState({aps:data})\r\n            })\r\n    }\r\n    deleteFunction(value)\r\n    {\r\n        var confirmation = window.confirm(\"Do you want to delete this appointment?\")\r\n        if(confirmation=== true)\r\n        {\r\n        var url = \"https://5cb2d49e6ce9ce00145bef17.mockapi.io/api/v1/appointments/\" +value\r\n        const response = fetch(url, {\r\n            method: 'DELETE', // *GET, POST, PUT, DELETE, etc.\r\n        })\r\n            .then(response => {\r\n                \r\n                alert(\"You have successfully deleted an appointment\");\r\n            })\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.fetchData()\r\n        console.log(\"in ad list\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                 <main className=\"bg-dark page landing-page\" style={{ paddingTop: '50px' }}>\r\n                    <section className=\"bg-dark clean-block clean-info dark\">\r\n                        <div className=\"container bg-dark\">\r\n                            <div className=\"block-heading\">\r\n                                <h2 className=\"text-monospace text-info\">List of Appointments</h2>\r\n                              \r\n                            </div>\r\n                            <div className=\"row align-items-center mt-5\">\r\n                            {this.state.aps.map((a)=>\r\n                    <Link to={`/advertisement/${a.id}`} style={{ color: \"inherit\", textDecoration: \"none\" }} className=\"col-lg-4 pb-4\">\r\n                        <OneAd \r\n                        appointmentId ={a.id}\r\n                        userName = {a.guest_name} \r\n                        title={a.title} \r\n                        location={a.location} \r\n                        time={a.meetingdate} \r\n                        avatar={a.avatar}\r\n                        deleteFunction = {this.deleteFunction}/>\r\n                    </Link>\r\n                    )}\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    </main>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport DateTimePicker from 'react-datetime-picker';\r\nconst myPut = \"https://5cb2d49e6ce9ce00145bef17.mockapi.io/api/v1/appointments\"\r\nexport default class EditAppointment extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            oneApp: [],\r\n            type: 'text',\r\n            title: \"\",\r\n            guest_name: \"\",\r\n            meetingdate: \"\",\r\n            meeting_user: \"\",\r\n            note: \"\",\r\n            status: \"\",\r\n            location: \"\",\r\n            building: 1,\r\n            floor: 1,\r\n            room: 1,\r\n            locations:[],\r\n            teachers:[]\r\n        }\r\n    }\r\n\r\n    fetchAppointment() {\r\n        const { match: { params } } = this.props\r\n        fetch(myPut + \"/\" + params.appointmentId)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                this.setState({ oneApp: json })\r\n            })\r\n            .then(() => this.displayInfo())\r\n    }\r\n    \r\n    // Acessing data from API recall\r\n    displayInfo() {\r\n        // Spliting the location into different fields\r\n        //var locationSplit = []\r\n       // locationSplit = this.state.oneApp.location.split(\".\")\r\n        var date = new Date(this.state.oneApp.meetingdate)\r\n        this.setState({\r\n            title: this.state.oneApp.title,\r\n            meetingdate: date,\r\n            meeting_user: this.state.oneApp.meeting_user,\r\n            note: this.state.oneApp.note,\r\n            location: this.state.oneApp.location\r\n            //building: locationSplit[0],\r\n            //floor: locationSplit[1],\r\n            //room: locationSplit[2]\r\n        })\r\n        //console.log(this.state.location)\r\n    }\r\n    \r\n    handleChange(event) {\r\n        let obj = []\r\n        obj[event.target.name] = event.target.value\r\n        this.setState(obj)\r\n    }\r\n    onChangeDate = meetingdate => this.setState({ meetingdate })\r\n    onFocus() {\r\n        this.setState({\r\n            type: 'date'\r\n        })\r\n    }\r\n\r\n    onBlur() {\r\n        this.setState({\r\n            type: 'text'\r\n        })\r\n    }\r\n\r\n    handleUpdate() {\r\n        // Re-combining fields into one location field \r\n        // for easy update\r\n        var location = this.state.building + \".\" + this.state.floor + \".\" + this.state.room\r\n        fetch(myPut + '/' + this.state.oneApp.id, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'put',\r\n            body: JSON.stringify({\r\n                title: this.state.title,\r\n                meetingdate: this.state.meetingdate,\r\n                meeting_user: this.state.meeting_user,\r\n                note: this.state.note,\r\n                location: this.state.location\r\n            })\r\n        })\r\n            .then(() => this.fetchAppointment())\r\n        alert('The appointment has been successfully updated')\r\n    }\r\n    fetchTeachers() {\r\n        let url = \"https://5f4529863fb92f0016754661.mockapi.io/teachers\"\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({ teachers: data })\r\n            })\r\n    }\r\n    fetchLocations() {\r\n        let url = \"https://5f4529863fb92f0016754661.mockapi.io/locations\"\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({ locations: data })\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        this.fetchAppointment();\r\n        this.fetchLocations();\r\n        this.fetchTeachers();\r\n        console.log('Fetched')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Edit Your Appointment</h1>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder={this.state.title}\r\n                            name=\"title\"\r\n                            onChange={this.handleChange.bind(this)}\r\n                        />\r\n                    </div>\r\n                    {/* The date is not showing */}\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"date\">Meeting Date</label>\r\n                        <h3>Meeting Date</h3>\r\n                        <DateTimePicker  value ={this.state.meetingdate}\r\n                        onChange = {this.onChangeDate} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"meetingperson\">Meeting Person</label>\r\n                        <select name=\"meeting_user\" onChange={this.handleChange.bind(this)}>\r\n                            {this.state.teachers.map(e => {\r\n                                if(e.name === this.state.meeting_user)\r\n                                {\r\n                                    return <option value={e.name} selected>{e.name}</option>\r\n                                }\r\n                                return <option value={e.name}>{e.name}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h2>Location</h2>\r\n                        <select \r\n                        onChange={this.handleChange.bind(this)} \r\n                        >\r\n                            {this.state.locations.map(e => {\r\n                                \r\n                                if(e.location === this.state.location)\r\n                                {\r\n                                    \r\n                                    return <option value={e.location} selected>{e.location}</option>\r\n                                }\r\n                                else\r\n                                {\r\n                                    return <option value={e.location}>{e.location}</option>\r\n                                }\r\n                            })}\r\n                        </select>\r\n                        {/* Building :\r\n                        <input\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            name=\"building\"\r\n                            placeholder={this.state.building}\r\n                            onChange={this.handleChange.bind(this)}\r\n                        />\r\n                        Floor :\r\n                        <input\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            name=\"floor\"\r\n                            placeholder={this.state.floor}\r\n                            onChange={this.handleChange.bind(this)}\r\n                        />\r\n                        Room :\r\n                        <input\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            name=\"room\"\r\n                            placeholder={this.state.room}\r\n                            onChange={this.handleChange.bind(this)}\r\n                        /> */}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"note\">Note</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder={this.state.note}\r\n                            name=\"note\"\r\n                            onChange={this.handleChange.bind(this)}\r\n                        />\r\n                    </div>\r\n                </form>\r\n                <button className=\"btn btn-primary\" onClick={this.handleUpdate.bind(this)}>Save Changes</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { Link } from \"react-router-dom\"\r\nimport Appointment from './Appointment'\r\nimport Calendar from './Calendar'\r\nimport ApList from './ApList'\r\nimport EditAppointment from './EditAppointment';\r\nconst myGet = 'https://5cb2d49e6ce9ce00145bef17.mockapi.io/api/v1/users'\r\nexport default class Profile extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            user: {},\r\n            account: [],\r\n            id: '',\r\n            userName: '',\r\n            email: '',\r\n            lastName: '',\r\n            firstName: '',\r\n            avatar:'',\r\n            password:'',\r\n            npassword:'',\r\n            cnpassword:'',\r\n        }\r\n    }\r\n\r\n    fectchAccount() {\r\n        const { match: { params } } = this.props;\r\n        if (this.state.user.id == undefined) {\r\n            //console.log(params.userName)\r\n            fetch(myGet)\r\n                .then(res => res.json())\r\n                .then(json => {\r\n                    let data = json.filter(a => a.userName === params.userName)\r\n                    this.setState({ user: data[0] })\r\n                    //console.log(this.state.user);\r\n                })\r\n        }\r\n    }\r\n    refresh() {\r\n        const Url = 'https://5cb2d49e6ce9ce00145bef17.mockapi.io/api/v1/users/' + this.state.user.id;\r\n        fetch(Url)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                this.setState({ user: json })\r\n            })\r\n\r\n    }\r\n    handleUpdate() {\r\n        //const {match: {params}} = this.props;\r\n        if (\r\n            this.state.email !== '' &&\r\n            this.state.firstName !== '' &&\r\n            this.state.lastName !== ''\r\n        ) {\r\n            fetch(myGet + '/' + this.state.user.id, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'put',\r\n                body: JSON.stringify({\r\n                    email: this.state.email,\r\n                    firstName: this.state.firstName,\r\n                    lastName: this.state.lastName\r\n                })\r\n            })\r\n                .then(() => this.props.fectchAccount())\r\n            alert('The account has been successfully updated')\r\n        } else {\r\n            alert('Please enter correct information')\r\n        }\r\n    }\r\n    handleUpdateAvatar() {\r\n        //const {match: {params}} = this.props;\r\n        if (\r\n          \r\n            this.state.avatar !== ''\r\n        ) {\r\n          \r\n            fetch(myGet + '/' + this.state.user.id, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'put',\r\n                body: JSON.stringify({\r\n                  \r\n                    avatar: this.state.avatar\r\n                })\r\n            })\r\n                .then(() => this.props.fectchAccount())\r\n            alert('The avatar has been successfully updated')\r\n        } else {\r\n            alert('Please enter avatar source')\r\n        }\r\n    }\r\n\r\n    handleChangePassword(){\r\n        if (\r\n            this.state.password !== '' &&\r\n            this.state.npassword !== '' &&\r\n            this.state.cnpassword !== ''\r\n        ) {\r\n            if (this.state.password === this.state.user.password){\r\n                if (this.state.npassword === this.state.cnpassword){\r\n                    fetch(myGet + '/' + this.state.user.id, {\r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        method: 'put',\r\n                        body: JSON.stringify({\r\n                          \r\n                            password: this.state.npassword\r\n                        })\r\n                    })\r\n                        .then(() => this.props.fectchAccount())\r\n                    alert('The password has been successfully updated')\r\n                }  else{\r\n                    alert(\"The new password does not match\")\r\n                }  \r\n            } else{\r\n                alert('Check your password again')\r\n            }\r\n        } else {\r\n            alert('Please enter avatar source')\r\n        }\r\n    }\r\n    displayInfo() {\r\n        return (\r\n            <div id=\"wrapper\">\r\n                <div key={this.state.user.id}>\r\n                    <div className=\"d-flex flex-column\" id=\"content-wrapper\">\r\n                        <div id=\"content\">\r\n                            <div className=\"container-fluid\">\r\n                                <h3 className=\"text-dark mb-4\">Profile</h3>\r\n                                <div className=\"row mb-3\">\r\n                                    <div className=\"col-lg-4\">\r\n                                        <div className=\"card mb-3\">\r\n                                            <div className=\"card-body text-center shadow\">\r\n                                                <img alt={this.state.user.avatar} className=\"rounded-circle mb-3 mt-4\" src={this.state.user.avatar} width=\"160\" height=\"160\" />\r\n                                                <div className=\"mb-3\">\r\n                                            \r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    placeholder={this.state.user.avatar}\r\n                                                    value={this.state.avatar}\r\n                                                    name=\"avatar\"\r\n                                                    onChange={this.handleChange.bind(this)}\r\n                                            />\r\n                                            <button className=\"btn btn-primary btn-sm\" type=\"submit\" onClick={this.handleUpdateAvatar.bind(this)}>Change Photo</button>\r\n                                            </div>\r\n                                            </div>\r\n                                            <div className=\"card-body text-center shadow\">\r\n                                                <ul>\r\n                                                    <li>\r\n                                                        <Link to={\"/Profile/\" + this.state.user.userName + \"\"}>Profile Setting</Link>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <Link to={\"/Profile/\" + this.state.user.userName + \"/Appointments\"}>Make Appointment</Link>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <Link to={\"/Profile/\" + this.state.user.userName + \"/ViewAppointments\"}>View Appointment</Link>\r\n                                                    </li>\r\n                                                </ul>\r\n                                                <Calendar userName={this.state.user.userName} />\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-lg-8\">\r\n                                        <Switch>\r\n                                            <Route exact path=\"/Profile/:userName\" render={e => this.displayProfile(this.state.user)} />\r\n                                            <Route path=\"/Profile/:userName/Appointments\" render={(props) => <Appointment guest_name={this.state.user.userName} refreshProfile={this.refresh.bind(this)} />} />\r\n                                            <Route path=\"/Profile/:userName/ViewAppointments\" render={(props) => <ApList userName={this.state.user.userName} />} />\r\n                                            <Route path={`/Profile/:userName/:appointmentId`} render={(props) =>\r\n                                                <EditAppointment {...props} />\r\n                                            }>\r\n                                            </Route>\r\n                                        </Switch>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    displayProfile(a) {\r\n        return <div className=\"row\">\r\n            <div className=\"col\">\r\n                <div className=\"card shadow mb-3\">\r\n                    <div className=\"card-header py-3\">\r\n                        <p className=\"text-primary m-0 font-weight-bold\">User Settings</p>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"username\">\r\n                                            <strong>Username</strong>\r\n                                        </label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"text\"\r\n                                            placeholder={this.state.user.userName}\r\n                                            value={this.state.userName}\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                            disabled\r\n                                            name=\"userName\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"email\">\r\n                                            <strong>Email Address</strong>\r\n                                        </label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"email\"\r\n                                            placeholder={this.state.user.email}\r\n                                            value={this.state.email}\r\n                                            name=\"email\"\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"first_name\">\r\n                                            <strong>First Name</strong>\r\n                                        </label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"text\"\r\n                                            placeholder={this.state.user.firstName}\r\n                                            value={this.state.firstName}\r\n                                            name=\"firstName\"\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"last_name\">\r\n                                            <strong>Last Name</strong>\r\n                                        </label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"text\"\r\n                                            placeholder={this.state.user.lastName}\r\n                                            value={this.state.lastName}\r\n                                            name=\"lastName\"\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button className=\"btn btn-primary btn-sm\" type=\"submit\" onClick={this.handleUpdate.bind(this)}>Save Settings</button>\r\n                            </div>\r\n                        </form>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"card shadow\">\r\n                    <div className=\"card-header py-3\">\r\n                        <p className=\"text-primary m-0 font-weight-bold\">Contact Settings</p>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form>\r\n                            <div className=\"form-group\"><label htmlFor=\"address\"><strong>Address</strong></label><input className=\"form-control\" type=\"text\" placeholder=\"Sunset Blvd, 38\" name=\"address\" /></div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col\">\r\n                                    <div className=\"form-group\"><label htmlFor=\"city\"><strong>City</strong></label><input className=\"form-control\" type=\"text\" placeholder=\"Los Angeles\" name=\"city\" /></div>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <div className=\"form-group\"><label htmlFor=\"country\"><strong>Country</strong></label><input className=\"form-control\" type=\"text\" placeholder=\"USA\" name=\"country\" /></div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\"><button className=\"btn btn-primary btn-sm\" type=\"submit\">Save&nbsp;Settings</button></div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card shadow\" visible =\"false\">\r\n                    <div className=\"card-header py-3\">\r\n                        <p className=\"text-primary m-0 font-weight-bold\">Private Information</p>\r\n                    </div>\r\n                    <div className=\"card-body\" >\r\n                        <form>\r\n                        <div className=\"form-row\">\r\n                              \r\n                            <div className=\"col\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"email\">\r\n                                            <strong>Last Password</strong>\r\n                                        </label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"password\"\r\n                                            value={this.state.password}\r\n                                            name=\"password\"\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"first_name\">\r\n                                            <strong>New Password</strong>\r\n                                        </label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"password\"\r\n                                            value={this.state.npassword}\r\n                                            name=\"npassword\"\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                               \r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"first_name\">\r\n                                            <strong>Confirm New Password</strong>\r\n                                        </label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"password\"\r\n                                            value={this.state.cnpassword}\r\n                                            name=\"cnpassword\"\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                               \r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <button className=\"btn btn-primary btn-sm\" type=\"submit\" onClick={this.handleChangePassword.bind(this)}>Change Password</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n    handleChange(event) {\r\n        let obj = []\r\n        obj[event.target.name] = event.target.value\r\n        this.setState(obj)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fectchAccount()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.displayInfo()}\r\n            </div>\r\n        )\r\n    }\r\n}","import { createBrowserHistory } from \"history\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  //MDBContainer,\r\n  MDBBtn,\r\n  //MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBModalFooter,\r\n  MDBInput,\r\n} from \"mdbreact\"\r\nconst Contact = (props) => {\r\n  return (\r\n    <div class='footer-dark'>\r\n      <div className=\"contact\">\r\n        <h1>Contact Information</h1>\r\n        <div className=\"row p-2 pl-5\">\r\n          <div className=\"col-md-3\">\r\n            <i className=\"fa fa-map-marker-alt fa-2x\"></i>\r\n          </div>\r\n          <div className=\"col-md-9\">\r\n            <p>Address</p>\r\n            <p>Ho Chi Minh City</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row p-2 pl-5\">\r\n          <div className=\"col-md-3\">\r\n            <i className=\"fa fa-envelope fa-2x\"></i>\r\n          </div>\r\n          <div className=\"col-md-9\">\r\n            <p>Email</p>\r\n            <p>admin@gmail.com</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row p-2 pl-5\">\r\n          <div className=\"col-md-3\">\r\n            <i className=\"fa fa-phone fa-2x\"></i>\r\n          </div>\r\n          <div className=\"col-md-9\">\r\n            <p>Phone</p>\r\n            <p>0123456789</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"row p-2 pl-5\">\r\n          <div class=\"col\" style={{}}>\r\n            <Link to=\"/contactform\">\r\n              <MDBBtn>\r\n                Leave us your message!\r\n                </MDBBtn>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport {\r\n  //MDBContainer,\r\n  MDBBtn,\r\n  //MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBModalFooter,\r\n  MDBInput,\r\n} from \"mdbreact\";\r\nimport history from \"../history\";\r\n\r\nexport default class LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // reset login status\r\n    // this.props.logout();\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      submitted: false,\r\n      myuser: undefined,\r\n      listOfUsers: []\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange(e) {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  }\r\n  getInfo() {\r\n    let myUrl = 'https://5cb2d49e6ce9ce00145bef17.mockapi.io/api/v1/users';\r\n    fetch(myUrl)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        var user = data.find(e => e.email === this.state.email);\r\n        if (user !==null) {\r\n          this.setState({ myuser:user })\r\n          alert(\"you have logged in successfully!\");\r\n        }\r\n\r\n      })\r\n  }\r\n  reDirecting()\r\n  {\r\n    if(this.state.myuser !==undefined)\r\n    {\r\n      return <Redirect to={\"/Profile/\"+this.state.myuser.userName} />\r\n    }\r\n  }\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.setState({ submitted: true });\r\n    const { email, password } = this.state;\r\n    if (email && password) {\r\n      history.push(\"/\");\r\n    } else {\r\n      alert(\"Some thing is missing\");\r\n    }\r\n  }\r\n  render() {\r\n    //const { loggingIn } = this.props;\r\n    //const { email, password, submitted } = this.state;\r\n    return (\r\n\r\n      <div className=\"mt-5\">\r\n        {this.reDirecting()}\r\n        <div\r\n          className=\"container rounded p-3\"\r\n          style={{ height: \"\", width: \"800px\", border: \"2px solid grey\" }}\r\n        >\r\n          <MDBModalHeader\r\n            className=\"text-center\"\r\n            titleclassName=\"w-100 font-weight-bold\"\r\n          >\r\n            Login\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <form className=\"mx-3 grey-text\">\r\n              <MDBInput\r\n                label=\"Your email\"\r\n                icon=\"envelope\"\r\n                group\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={this.state.email}\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n                onChange={this.handleChange.bind(this)}\r\n              />\r\n              <MDBInput\r\n                label=\"Your password\"\r\n                icon=\"lock\"\r\n                group\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={this.state.password}\r\n                validate\r\n                onChange={this.handleChange.bind(this)}\r\n              />\r\n            </form>\r\n          </MDBModalBody>\r\n          <MDBModalFooter className=\"justify-content-center\">\r\n            <MDBBtn\r\n              type=\"button\"\r\n              color=\"deep-orange\"\r\n              onClick={this.getInfo.bind(this)}\r\n            >\r\n              Login\r\n            </MDBBtn>\r\n            \r\n              <Link to=\"/register\"><MDBBtn\r\n              type=\"button\"\r\n              color=\"deep-green\"\r\n            >Register</MDBBtn></Link>\r\n            \r\n            \r\n          </MDBModalFooter>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// function mapState(state) {\r\n//   const { loggingIn } = state.authentication;\r\n//   return { loggingIn };\r\n// }\r\n\r\n// const connectedLoginPage = connect(mapState)(LoginPage);\r\n// export { connectedLoginPage as LoginPage };\r\n","import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport LoginPage from './Login'\r\nimport Register from './Register'\r\nexport default class Home extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n\r\n                <div className=\"home\">\r\n                    <h1>Booking Online System</h1>\r\n                     <img\r\n                            className=\"section1\"\r\n                            src=\"https://tgmdental.net/wp-content/uploads/2018/07/booking-background.jpg\" />\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nexport default class ContactForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      message: \"\",\r\n      refresh: false\r\n    }\r\n  }\r\n  handleChange(event) {\r\n    let obj = []\r\n    obj[event.target.name] = event.target.value\r\n    this.setState(obj)\r\n  }\r\n  createData() {\r\n    if (this.state.name === \"\") {\r\n      alert(\"Please enter your name\")\r\n      return;\r\n    }\r\n    if (this.state.email === \"\") {\r\n      alert(\"Please enter your email\")\r\n      return;\r\n    }\r\n    if (this.state.message === \"\") {\r\n      alert(\"Please enter your message\")\r\n      return;\r\n    }\r\n    var form =\r\n    {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      message: this.state.message\r\n    }\r\n    var url = \"https://5cb2d49e6ce9ce00145bef17.mockapi.io/api/v1/contactform\"\r\n    fetch(url, {\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'post',\r\n      body: JSON.stringify(form)\r\n    })\r\n      .then(json => {\r\n        alert('Your message has been sent to the System.')\r\n        this.setState({ refresh: true })\r\n      })\r\n  }\r\n  resetPage() {\r\n    if (this.state.refresh) {\r\n      return <Redirect to=\"/\"></Redirect>\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        {this.resetPage()}\r\n        <form className=\"contact-form\">\r\n          <div class=\"form-group\">\r\n            <label for=\"name\">\r\n              Name: <span className=\"text-danger pl-3\">NAME IS REQUIRED</span>\r\n            </label>\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter Your Name\"\r\n              name=\"name\"\r\n              onChange={this.handleChange.bind(this)}\r\n            ></input>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">\r\n              Email address:\r\n            <span className=\"text-danger pl-3\"> EMAIL IS REQUIRED</span>\r\n            </label>\r\n            <input\r\n              required\r\n              type=\"email\"\r\n              class=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter email\"\r\n              name=\"email\"\r\n              onChange={this.handleChange.bind(this)}\r\n            ></input>\r\n            <small id=\"emailHelp\" class=\"form-text text-muted\">\r\n              We'll never share your email with anyone else.\r\n          </small>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlTextarea1\">\r\n              Message{\" \"}\r\n              <span className=\"text-danger pl-3\"> MESSAGE IS REQUIRED</span>\r\n            </label>\r\n            <textarea\r\n              required\r\n              class=\"form-control\"\r\n              id=\"exampleFormControlTextarea1\"\r\n              rows=\"3\"\r\n              name=\"message\"\r\n              onChange={this.handleChange.bind(this)}\r\n            ></textarea>\r\n          </div>\r\n          <button\r\n            onClick={this.createData.bind(this)}\r\n            class=\"contact-btn btn\"\r\n            style={{ position: 'absolute' }}\r\n          >\r\n            SEND MESSAGE\r\n            </button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\nimport {\r\n    //MDBContainer,\r\n    MDBBtn,\r\n    //MDBModal,\r\n    MDBModalBody,\r\n    MDBModalHeader,\r\n    MDBModalFooter,\r\n    MDBInput,\r\n} from \"mdbreact\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\n\r\nexport default class LoginChange extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // reset login status\r\n        // this.props.logout();\r\n\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            submitted: false,\r\n            myuser: undefined,\r\n            listOfUsers: []\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleChange(e) {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n    getInfo() {\r\n        let myUrl = 'https://5cb2d49e6ce9ce00145bef17.mockapi.io/api/v1/users';\r\n        fetch(myUrl)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                var user = data.find(e => e.email === this.state.email);\r\n                if (user !== undefined) {\r\n                    if(this.state.password == user.password)\r\n                    {\r\n                        this.setState({ myuser: user })\r\n                        alert(\"You have logged in successfully\")\r\n                    }\r\n                    else\r\n                    {\r\n                        alert(\"Wrong password!\")\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    alert(\"User does not exist!\")\r\n                }\r\n\r\n            })\r\n    }\r\n    reDirecting() {\r\n        if (this.state.myuser !== undefined) {\r\n            return <Redirect to={\"/Profile/\" + this.state.myuser.userName} />\r\n        }\r\n    }\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        this.setState({ submitted: true });\r\n        const { email, password } = this.state;\r\n        if (email && password) {\r\n            // eslint-disable-next-line no-restricted-globals\r\n            history.push(\"/\");\r\n        } else {\r\n            alert(\"Some thing is missing\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.reDirecting()}\r\n                <div>\r\n                    <nav class=\"navbar navbar-light navbar-expand-md sticky-top navigation-clean-button\" style={{ height: '80px', backgroundColor: '#37434d', color: '#ffffff' }} >\r\n                        <div class=\"container-fluid\">\r\n                            <a class=\"navbar-brand\" href=\"#\">\r\n                                <i class=\"fa fa-globe\"></i>&nbsp;Milestone 1\r\n                            </a>\r\n                            <ul class='navbar-nav'>\r\n                                <li class='nav-item'>\r\n                                    <input\r\n                                        class=\"d-md ml-auto rounded\"\r\n                                        icon=\"envelop\"\r\n                                        style={{ marginTop: '7px' }}\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        value={this.state.email}\r\n                                        placeholder=\"Your email\"\r\n                                        onChange={this.handleChange.bind(this)}\r\n                                    />\r\n                                </li>\r\n                                <li class='nav-item'>\r\n                                    <input\r\n                                        class=\"d-md ml-auto rounded\"\r\n                                        style={{ marginTop: '7px' }}\r\n                                        name=\"password\"\r\n                                        type=\"password\"\r\n                                        value={this.state.password}\r\n                                        placeholder=\"Your password\"\r\n                                        onChange={this.handleChange.bind(this)}\r\n                                    />\r\n                                </li>\r\n                                <li class='nav-item'>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        class=\"btn btn-primary btn-sm\"\r\n                                        onClick={this.getInfo.bind(this)}\r\n                                    >Log in</button>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport './js/bs-animation.js'\r\nimport { BrowserRouter, Link, Route } from 'react-router-dom'\r\n\r\nexport default class Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <section>\r\n                    <div data-bs-parallax-bg=\"true\" style={{ height: '500px', backgroundImage: `url(${require('./images/pic1.jpg')})`, backgroundPosition: 'center', backgroundSize: 'cover' }}>\r\n                        <nav class=\"navbar navbar-light navbar-expand-md navbar-transparency\" style={{position: 'relative'}}>\r\n                            <div class=\"container\">\r\n                                <div><a class=\"navbar-brand\" href=\"#\">BRAND</a><button data-toggle=\"collapse\" class=\"navbar-toggler\" data-target=\"#navcol-1\"><span class=\"sr-only\">Toggle navigation</span><span class=\"navbar-toggler-icon\"></span></button></div>\r\n                                <div class=\"collapse navbar-collapse \"\r\n                                    id=\"navcol-1\">\r\n                                    <ul class=\"nav navbar-nav float-left ml-auto\">\r\n                                   \r\n                                        <li class=\"nav-item\" role=\"presentation\"><a class=\"nav-link text-dark\" href=\"#\" style={{ fontSize: '16px', filter: 'contrast(140%)' }}>Cart</a></li>\r\n                                        <li class=\"nav-item d-md-flex m-auto justify-content-md-center\" role=\"presentation\"><a class=\"nav-link text-dark\" href=\"#\" data-toggle=\"modal\" data-target=\"#signup\" style={{ fontSize: '16px', filter: 'contrast(140%)' }}>Login</a></li>\r\n                                        <li class=\"nav-item d-md-flex m-auto justify-content-md-center\" role=\"presentation\"><a class=\"nav-link text-dark\" href=\"#\" data-toggle=\"modal\" data-target=\"#signin\" style={{ fontSize: '16px', filter: 'contrast(140%)' }}>Sign Up</a></li>\r\n                                        <li class=\"nav-item dropdown\"><a class=\"dropdown-toggle nav-link text-dark\" data-toggle=\"dropdown\" aria-expanded=\"false\" href=\"#\" style={{ fontSize: '16px', filter: 'contrast(140%)' }}>Dropdown </a>\r\n                                            <div class=\"dropdown-menu\" role=\"menu\"><a class=\"dropdown-item\" role=\"presentation\" href=\"#\">First Item</a><a class=\"dropdown-item\" role=\"presentation\" href=\"#\">Second Item</a><a class=\"dropdown-item\" role=\"presentation\" href=\"#\">Third Item</a></div>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </nav>\r\n                    </div>\r\n\r\n\r\n                    \r\n                   \r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport LoginChange from './LoginChange'\r\nimport {\r\n    //MDBContainer,\r\n    MDBBtn,\r\n    //MDBModal,\r\n    MDBModalBody,\r\n    MDBModalHeader,\r\n    MDBModalFooter,\r\n    MDBInput,\r\n} from 'mdbreact';\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nconst myPost = 'https://5cb2d49e6ce9ce00145bef17.mockapi.io/api/v1/users'\r\nexport default class RegisterChange extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userName: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            password: '',\r\n            registered: false\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        let obj = []\r\n        obj[event.target.name] = event.target.value\r\n        this.setState(obj)\r\n    }\r\n\r\n    handleAdd() {\r\n        if (this.state.name === '' |\r\n            this.state.email === '' |\r\n            this.state.password === '' |\r\n            this.state.firstName === '' |\r\n            this.state.lastName === ''\r\n        ) {\r\n            alert('Something is missing')\r\n        } else {\r\n            let account = {\r\n                userName: this.state.userName,\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            }\r\n            console.log(account)\r\n            fetch(myPost, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'post',\r\n                body: JSON.stringify(account)\r\n            })\r\n                .then(json => {\r\n                    alert('You have signed up successfully!')\r\n                    this.setState({ registered: true })\r\n                })\r\n        }\r\n    }\r\n    refreshPage() {\r\n        if (this.state.registered) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <LoginChange />\r\n                <div class='row'>\r\n                    <div class='col' style={{ border: '2px solid grey', paddingLeft: '30px' }}>\r\n                        <iframe\r\n                            src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d1959.3865447437727!2d106.67931670809078!3d10.828669348071534!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x317528fe994bbcaf%3A0x57fc04b92e1b4ebe!2zROG7sSDDoW4gQ2VudGVyIEhpbGxzIEfDsiBW4bqlcCwgUGjGsOG7nW5nIDcsIEfDsiBW4bqlcCwgVGjDoG5oIHBo4buRIEjhu5MgQ2jDrSBNaW5oLCBWaeG7h3QgTmFt!5e0!3m2!1svi!2s!4v1596602735408!5m2!1svi!2s\"\r\n                            width=\"100%\"\r\n                            height=\"100%\"\r\n                            frameBorder=\"0\"\r\n                            allowFullScreen=\"true\"\r\n                            aria-hidden=\"false\"\r\n                            tabIndex=\"0\"\r\n                            title=\"map\"\r\n                            \r\n                        ></iframe>\r\n                    </div>\r\n                    <div class='col'>\r\n                        <div class='container rounded' style={{ height: '100%', width: '100%', border: '2px solid grey' }}>\r\n                            <MDBModalHeader\r\n                                className='text-center'\r\n                                titleClass='w-100 font-weight-bold'\r\n                            >\r\n                                Sign up\r\n                            </MDBModalHeader>\r\n                            <MDBModalBody>\r\n                                <form className='mx-3 grey-text'>\r\n                                    <MDBInput\r\n                                        label='Username'\r\n                                        icon='user'\r\n                                        group\r\n                                        name='userName'\r\n                                        type='text'\r\n                                        value={this.state.userName}\r\n                                        validate\r\n                                        error='wrong'\r\n                                        success='right'\r\n                                        onChange={this.handleChange.bind(this)}\r\n                                    />\r\n                                    <MDBInput\r\n                                        label='First name'\r\n                                        icon='signature'\r\n                                        group\r\n                                        name='firstName'\r\n                                        type='text'\r\n                                        value={this.state.firstName}\r\n                                        validate\r\n                                        error='wrong'\r\n                                        success='right'\r\n                                        onChange={this.handleChange.bind(this)}\r\n                                    />\r\n                                    <MDBInput\r\n                                        label='Last name'\r\n                                        icon='signature'\r\n                                        group\r\n                                        name='lastName'\r\n                                        type='text'\r\n                                        value={this.state.lastName}\r\n                                        validate\r\n                                        error='wrong'\r\n                                        success='right'\r\n                                        onChange={this.handleChange.bind(this)}\r\n                                    />\r\n                                    <MDBInput\r\n                                        label='Your email'\r\n                                        icon='envelope'\r\n                                        group\r\n                                        name='email'\r\n                                        type='email'\r\n                                        value={this.state.email}\r\n                                        validate\r\n                                        error='wrong'\r\n                                        success='right'\r\n                                        onChange={this.handleChange.bind(this)}\r\n                                    />\r\n                                    <MDBInput\r\n                                        label='Your password'\r\n                                        icon='lock'\r\n                                        group\r\n                                        name='password'\r\n                                        type='password'\r\n                                        value={this.state.password}\r\n                                        validate\r\n                                        onChange={this.handleChange.bind(this)}\r\n                                    />\r\n                                </form>\r\n                            </MDBModalBody>\r\n                            <MDBModalFooter className='justify-content-center'>\r\n\r\n                                <MDBBtn\r\n                                    type='button'\r\n                                    color='deep-orange'\r\n                                    onClick={this.handleAdd.bind(this)}\r\n                                >\r\n                                    SIGN UP\r\n                                </MDBBtn>\r\n                                {this.refreshPage()}\r\n\r\n                                {/* <Link to=\"/\">\r\n                                    <MDBBtn type='button' color='deep-green'>Already had an account?\r\n                                </MDBBtn>\r\n                                </Link> */}\r\n\r\n                            </MDBModalFooter>\r\n                        </div>\r\n\r\n                        <div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Register from './pages/Register';\r\n//import Draft from './pages/Draft';\r\nimport Profile from './pages/Profile';\r\nimport Login from './pages/Login';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Home from './pages/Home';\r\nimport Contact from './pages/Contact';\r\nimport ContactForm from './pages/ContactForm';\r\nimport Header from './Header';\r\nimport LoginChange from './pages/LoginChange';\r\nimport RegisterChange from './pages/RegisterChange';\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      {/* <Route exact path='/RouterTest' component={RouterTest} /> */}\r\n      {/* <Header></Header> */}\r\n      <Router>\r\n        <Switch>\r\n          \r\n          \r\n          <Route exact path='/' component={RegisterChange} />\r\n          {/* <Route path='/register' component={Register} /> */}\r\n          <Route path={`/Profile/:userName`} render={(props) =>\r\n            <Profile {...props} />\r\n          }>   \r\n          </Route>\r\n          \r\n          <Route path =\"/contactform\" component ={ContactForm}/>\r\n        </Switch>\r\n        <Contact/>\r\n      </Router>\r\n      {/* <RegisterChange/> */}\r\n      \r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}